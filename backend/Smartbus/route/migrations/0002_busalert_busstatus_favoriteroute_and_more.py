# Generated by Django 5.2.6 on 2025-10-07 17:57

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("route", "0001_initial"),
        ("users", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="BusAlert",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "alert_type",
                    models.CharField(
                        choices=[
                            ("arrival", "Bus Arriving"),
                            ("delay", "Bus Delayed"),
                            ("breakdown", "Bus Breakdown"),
                            ("route_change", "Route Changed"),
                            ("maintenance", "Maintenance Alert"),
                            ("traffic", "Traffic Update"),
                            ("weather", "Weather Alert"),
                        ],
                        max_length=20,
                    ),
                ),
                (
                    "priority",
                    models.CharField(
                        choices=[
                            ("low", "Low Priority"),
                            ("medium", "Medium Priority"),
                            ("high", "High Priority"),
                            ("critical", "Critical Alert"),
                        ],
                        default="medium",
                        max_length=10,
                    ),
                ),
                ("title", models.CharField(max_length=200)),
                ("message", models.TextField()),
                (
                    "target_user_email",
                    models.EmailField(
                        blank=True,
                        help_text="Specific user, blank for broadcast",
                        max_length=254,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                ("is_sent", models.BooleanField(default=False)),
                ("sent_at", models.DateTimeField(blank=True, null=True)),
                ("expires_at", models.DateTimeField(blank=True, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "bus_alerts",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="BusStatus",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "current_status",
                    models.CharField(
                        choices=[
                            ("active", "Active/Running"),
                            ("idle", "Idle/Stopped"),
                            ("maintenance", "Under Maintenance"),
                            ("offline", "Offline"),
                            ("delayed", "Delayed"),
                            ("breakdown", "Breakdown"),
                        ],
                        default="offline",
                        max_length=20,
                    ),
                ),
                ("driver_name", models.CharField(blank=True, max_length=100)),
                ("driver_phone", models.CharField(blank=True, max_length=15)),
                ("passenger_count", models.IntegerField(default=0)),
                ("max_capacity", models.IntegerField(default=50)),
                ("last_maintenance", models.DateField(blank=True, null=True)),
                ("next_maintenance", models.DateField(blank=True, null=True)),
                (
                    "fuel_level",
                    models.FloatField(default=100.0, help_text="Fuel percentage"),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "bus_status",
            },
        ),
        migrations.CreateModel(
            name="FavoriteRoute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user_email",
                    models.EmailField(
                        help_text="User email for identification", max_length=254
                    ),
                ),
                (
                    "nickname",
                    models.CharField(
                        blank=True, help_text="User-given nickname", max_length=100
                    ),
                ),
                ("notification_enabled", models.BooleanField(default=True)),
                (
                    "notification_time_before",
                    models.IntegerField(
                        default=10, help_text="Minutes before arrival to notify"
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("last_accessed", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "favorite_routes",
                "ordering": ["-last_accessed"],
            },
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="accuracy",
            field=models.FloatField(default=0.0, help_text="GPS accuracy in meters"),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="altitude",
            field=models.FloatField(default=0.0, help_text="Altitude in meters"),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="average_speed",
            field=models.FloatField(default=0.0, help_text="Average speed in km/h"),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="bearing",
            field=models.FloatField(default=0.0, help_text="Direction in degrees"),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="delay_minutes",
            field=models.IntegerField(
                default=0, help_text="Delay in minutes (negative for early)"
            ),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="distance_covered",
            field=models.FloatField(default=0.0, help_text="Distance covered in km"),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="distance_remaining",
            field=models.FloatField(default=0.0, help_text="Distance remaining in km"),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="engine_status",
            field=models.BooleanField(default=True, help_text="Engine on/off"),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="estimated_arrival_destination",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="is_delayed",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="is_moving",
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="last_movement",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="next_stop",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="next_stop_tracking",
                to="route.routestop",
            ),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="route_progress_percent",
            field=models.FloatField(
                default=0.0, help_text="Route completion percentage"
            ),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="traffic_condition",
            field=models.CharField(
                blank=True,
                choices=[
                    ("light", "Light Traffic"),
                    ("moderate", "Moderate Traffic"),
                    ("heavy", "Heavy Traffic"),
                    ("jam", "Traffic Jam"),
                ],
                max_length=50,
            ),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="trip_start_time",
            field=models.DateTimeField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name="liveroutetracking",
            name="weather_condition",
            field=models.CharField(blank=True, max_length=50),
        ),
        migrations.AlterField(
            model_name="liveroutetracking",
            name="direction",
            field=models.CharField(
                choices=[
                    ("to_destination", "To Destination"),
                    ("to_source", "To Source"),
                    ("circular", "Circular Route"),
                ],
                max_length=20,
            ),
        ),
        migrations.AddIndex(
            model_name="liveroutetracking",
            index=models.Index(
                fields=["bus_route", "-last_updated"],
                name="live_route__bus_rou_13d4ee_idx",
            ),
        ),
        migrations.AddIndex(
            model_name="liveroutetracking",
            index=models.Index(
                fields=["is_active", "is_moving"], name="live_route__is_acti_5fe9af_idx"
            ),
        ),
        migrations.AddField(
            model_name="busalert",
            name="bus_route",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="route.busroute",
            ),
        ),
        migrations.AddField(
            model_name="busalert",
            name="route",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                to="route.route",
            ),
        ),
        migrations.AddField(
            model_name="busalert",
            name="target_route",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="targeted_alerts",
                to="route.route",
            ),
        ),
        migrations.AddField(
            model_name="busstatus",
            name="bus",
            field=models.OneToOneField(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="status",
                to="users.bus",
            ),
        ),
        migrations.AddField(
            model_name="favoriteroute",
            name="bus_route",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="favorited_bus",
                to="route.busroute",
            ),
        ),
        migrations.AddField(
            model_name="favoriteroute",
            name="route",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="favorited_by",
                to="route.route",
            ),
        ),
        migrations.AddIndex(
            model_name="busalert",
            index=models.Index(
                fields=["alert_type", "is_active"], name="bus_alerts_alert_t_f34e26_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="busalert",
            index=models.Index(
                fields=["target_user_email", "is_sent"],
                name="bus_alerts_target__f48845_idx",
            ),
        ),
        migrations.AlterUniqueTogether(
            name="favoriteroute",
            unique_together={("user_email", "route")},
        ),
    ]
